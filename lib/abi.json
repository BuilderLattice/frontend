{
    "abi": [
        {
            "type": "constructor",
            "inputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "createUser",
            "inputs": [
                {
                    "name": "_dataHash",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "editMatch",
            "inputs": [
                {
                    "name": "user1",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "user2",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "compatibility",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getAllUsers",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct BuilderDataSupplyMarket.User[]",
                    "components": [
                        {
                            "name": "userAddress",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "userHash",
                            "type": "string",
                            "internalType": "string"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getSelectedUsers",
            "inputs": [
                {
                    "name": "_usersAddresses",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct BuilderDataSupplyMarket.User[]",
                    "components": [
                        {
                            "name": "userAddress",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "userHash",
                            "type": "string",
                            "internalType": "string"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getUser",
            "inputs": [
                {
                    "name": "_addr",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct BuilderDataSupplyMarket.User",
                    "components": [
                        {
                            "name": "userAddress",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "userHash",
                            "type": "string",
                            "internalType": "string"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "hasPaid",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "matches",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "userAddress",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "compatibilityConstant",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "payPremiumForExport",
            "inputs": [],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "updateDataHash",
            "inputs": [
                {
                    "name": "_dataHash",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        }
    ],
    "bytecode": {
        "object": "0x6080604052348015600e575f80fd5b50610d578061001c5f395ff3fe608060405260043610610084575f3560e01c8063a0d5fe6011610057578063a0d5fe6014610120578063a7ea2e7c146101dc578063b4033da814610208578063e2842d7914610227578063fbf47a9a1461023b575f80fd5b80631a9802e914610088578063507ffba5146100cb5780636f77926b146100ec5780637b788f0814610118575b5f80fd5b348015610093575f80fd5b506100a76100a2366004610908565b610279565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b3480156100d6575f80fd5b506100ea6100e5366004610975565b6102bb565b005b3480156100f7575f80fd5b5061010b610106366004610a09565b6103c4565b6040516100c29190610a73565b6100ea6104ff565b34801561012b575f80fd5b506100ea61013a366004610a85565b6001600160a01b039283165f818152600260208181526040808420815180830183529789168089528884018881528254600181810185559388528588209a51908702909a0180549a8c166001600160a01b03199b8c161781559051908301558552838352818520825180840190935295825281830196875285548082018755958552919093209251939091029091018054929095169190931617835551910155565b3480156101e7575f80fd5b506101fb6101f6366004610abf565b610564565b6040516100c29190610b6e565b348015610213575f80fd5b506100ea610222366004610975565b610706565b348015610232575f80fd5b506101fb610799565b348015610246575f80fd5b50610269610255366004610a09565b60036020525f908152604090205460ff1681565b60405190151581526020016100c2565b6002602052815f5260405f208181548110610292575f80fd5b5f918252602090912060029091020180546001909101546001600160a01b039091169250905082565b335f908152600160205260409020546001600160a01b0316156102dc575f80fd5b6040805180820182523380825260208083018581525f92835260019182905293909120825181546001600160a01b0319166001600160a01b0390911617815592519192839290918201906103309082610c52565b50505f805460018101825590805282517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600290920291820180546001600160a01b0319166001600160a01b03909216919091178155602084015184935090917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56401906103bd9082610c52565b5050505050565b604080518082019091525f8152606060208201526001600160a01b038281165f90815260016020526040902054166104385760405162461bcd60e51b8152602060048201526012602482015271155cd95c88191bd95cdb89dd08195e1a5cdd60721b60448201526064015b60405180910390fd5b6001600160a01b038083165f9081526001602081815260409283902083518085019094528054909416835290830180549293929184019161047890610bd1565b80601f01602080910402602001604051908101604052809291908181526020018280546104a490610bd1565b80156104ef5780601f106104c6576101008083540402835291602001916104ef565b820191905f5260205f20905b8154815290600101906020018083116104d257829003601f168201915b5050505050815250509050919050565b66038d7ea4c680003410156105495760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682066756e647360801b604482015260640161042f565b335f908152600360205260409020805460ff19166001179055565b80516060905f8167ffffffffffffffff81111561058357610583610930565b6040519080825280602002602001820160405280156105c857816020015b604080518082019091525f8152606060208201528152602001906001900390816105a15790505b5090505f5b828110156106fe5760015f8683815181106105ea576105ea610d0d565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f206040518060400160405290815f82015f9054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160018201805461065990610bd1565b80601f016020809104026020016040519081016040528092919081815260200182805461068590610bd1565b80156106d05780601f106106a7576101008083540402835291602001916106d0565b820191905f5260205f20905b8154815290600101906020018083116106b357829003601f168201915b5050505050815250508282815181106106eb576106eb610d0d565b60209081029190910101526001016105cd565b509392505050565b335f818152600160205260409020546001600160a01b0316146107795760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732070726044820152646f66696c6560d81b606482015260840161042f565b335f908152600160208190526040909120016107958282610c52565b5050565b335f9081526003602052604090205460609060ff1615156001146107ee5760405162461bcd60e51b815260206004820152600c60248201526b139bdd081c185a59081e595d60a21b604482015260640161042f565b5f805480602002602001604051908101604052809291908181526020015f905b828210156108e4575f848152602090819020604080518082019091526002850290910180546001600160a01b03168252600181018054929391929184019161085590610bd1565b80601f016020809104026020016040519081016040528092919081815260200182805461088190610bd1565b80156108cc5780601f106108a3576101008083540402835291602001916108cc565b820191905f5260205f20905b8154815290600101906020018083116108af57829003601f168201915b5050505050815250508152602001906001019061080e565b50505050905090565b80356001600160a01b0381168114610903575f80fd5b919050565b5f8060408385031215610919575f80fd5b610922836108ed565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561096d5761096d610930565b604052919050565b5f60208284031215610985575f80fd5b813567ffffffffffffffff81111561099b575f80fd5b8201601f810184136109ab575f80fd5b803567ffffffffffffffff8111156109c5576109c5610930565b6109d8601f8201601f1916602001610944565b8181528560208385010111156109ec575f80fd5b816020840160208301375f91810160200191909152949350505050565b5f60208284031215610a19575f80fd5b610a22826108ed565b9392505050565b60018060a01b0381511682525f60208201516040602085015280518060408601528060208301606087015e5f606082870101526060601f19601f8301168601019250505092915050565b602081525f610a226020830184610a29565b5f805f60608486031215610a97575f80fd5b610aa0846108ed565b9250610aae602085016108ed565b929592945050506040919091013590565b5f60208284031215610acf575f80fd5b813567ffffffffffffffff811115610ae5575f80fd5b8201601f81018413610af5575f80fd5b803567ffffffffffffffff811115610b0f57610b0f610930565b8060051b610b1f60208201610944565b91825260208184018101929081019087841115610b3a575f80fd5b6020850194505b83851015610b6357610b52856108ed565b825260209485019490910190610b41565b979650505050505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015610bc557603f19878603018452610bb0858351610a29565b94506020938401939190910190600101610b94565b50929695505050505050565b600181811c90821680610be557607f821691505b602082108103610c0357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610c4d57805f5260205f20601f840160051c81016020851015610c2e5750805b601f840160051c820191505b818110156103bd575f8155600101610c3a565b505050565b815167ffffffffffffffff811115610c6c57610c6c610930565b610c8081610c7a8454610bd1565b84610c09565b6020601f821160018114610cb2575f8315610c9b5750848201515b5f19600385901b1c1916600184901b1784556103bd565b5f84815260208120601f198516915b82811015610ce15787850151825560209485019460019092019101610cc1565b5084821015610cfe57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52603260045260245ffdfea264697066735822122052e62ef2ca2c1fc458d61a136137ac152d7415858957fa1afc9f707fa36c62ca64736f6c634300081a0033",
        "sourceMap": "196:3189:20:-:0;;;1018:16;;;;;;;;;;196:3189;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405260043610610084575f3560e01c8063a0d5fe6011610057578063a0d5fe6014610120578063a7ea2e7c146101dc578063b4033da814610208578063e2842d7914610227578063fbf47a9a1461023b575f80fd5b80631a9802e914610088578063507ffba5146100cb5780636f77926b146100ec5780637b788f0814610118575b5f80fd5b348015610093575f80fd5b506100a76100a2366004610908565b610279565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b3480156100d6575f80fd5b506100ea6100e5366004610975565b6102bb565b005b3480156100f7575f80fd5b5061010b610106366004610a09565b6103c4565b6040516100c29190610a73565b6100ea6104ff565b34801561012b575f80fd5b506100ea61013a366004610a85565b6001600160a01b039283165f818152600260208181526040808420815180830183529789168089528884018881528254600181810185559388528588209a51908702909a0180549a8c166001600160a01b03199b8c161781559051908301558552838352818520825180840190935295825281830196875285548082018755958552919093209251939091029091018054929095169190931617835551910155565b3480156101e7575f80fd5b506101fb6101f6366004610abf565b610564565b6040516100c29190610b6e565b348015610213575f80fd5b506100ea610222366004610975565b610706565b348015610232575f80fd5b506101fb610799565b348015610246575f80fd5b50610269610255366004610a09565b60036020525f908152604090205460ff1681565b60405190151581526020016100c2565b6002602052815f5260405f208181548110610292575f80fd5b5f918252602090912060029091020180546001909101546001600160a01b039091169250905082565b335f908152600160205260409020546001600160a01b0316156102dc575f80fd5b6040805180820182523380825260208083018581525f92835260019182905293909120825181546001600160a01b0319166001600160a01b0390911617815592519192839290918201906103309082610c52565b50505f805460018101825590805282517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600290920291820180546001600160a01b0319166001600160a01b03909216919091178155602084015184935090917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56401906103bd9082610c52565b5050505050565b604080518082019091525f8152606060208201526001600160a01b038281165f90815260016020526040902054166104385760405162461bcd60e51b8152602060048201526012602482015271155cd95c88191bd95cdb89dd08195e1a5cdd60721b60448201526064015b60405180910390fd5b6001600160a01b038083165f9081526001602081815260409283902083518085019094528054909416835290830180549293929184019161047890610bd1565b80601f01602080910402602001604051908101604052809291908181526020018280546104a490610bd1565b80156104ef5780601f106104c6576101008083540402835291602001916104ef565b820191905f5260205f20905b8154815290600101906020018083116104d257829003601f168201915b5050505050815250509050919050565b66038d7ea4c680003410156105495760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682066756e647360801b604482015260640161042f565b335f908152600360205260409020805460ff19166001179055565b80516060905f8167ffffffffffffffff81111561058357610583610930565b6040519080825280602002602001820160405280156105c857816020015b604080518082019091525f8152606060208201528152602001906001900390816105a15790505b5090505f5b828110156106fe5760015f8683815181106105ea576105ea610d0d565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f206040518060400160405290815f82015f9054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160018201805461065990610bd1565b80601f016020809104026020016040519081016040528092919081815260200182805461068590610bd1565b80156106d05780601f106106a7576101008083540402835291602001916106d0565b820191905f5260205f20905b8154815290600101906020018083116106b357829003601f168201915b5050505050815250508282815181106106eb576106eb610d0d565b60209081029190910101526001016105cd565b509392505050565b335f818152600160205260409020546001600160a01b0316146107795760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732070726044820152646f66696c6560d81b606482015260840161042f565b335f908152600160208190526040909120016107958282610c52565b5050565b335f9081526003602052604090205460609060ff1615156001146107ee5760405162461bcd60e51b815260206004820152600c60248201526b139bdd081c185a59081e595d60a21b604482015260640161042f565b5f805480602002602001604051908101604052809291908181526020015f905b828210156108e4575f848152602090819020604080518082019091526002850290910180546001600160a01b03168252600181018054929391929184019161085590610bd1565b80601f016020809104026020016040519081016040528092919081815260200182805461088190610bd1565b80156108cc5780601f106108a3576101008083540402835291602001916108cc565b820191905f5260205f20905b8154815290600101906020018083116108af57829003601f168201915b5050505050815250508152602001906001019061080e565b50505050905090565b80356001600160a01b0381168114610903575f80fd5b919050565b5f8060408385031215610919575f80fd5b610922836108ed565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561096d5761096d610930565b604052919050565b5f60208284031215610985575f80fd5b813567ffffffffffffffff81111561099b575f80fd5b8201601f810184136109ab575f80fd5b803567ffffffffffffffff8111156109c5576109c5610930565b6109d8601f8201601f1916602001610944565b8181528560208385010111156109ec575f80fd5b816020840160208301375f91810160200191909152949350505050565b5f60208284031215610a19575f80fd5b610a22826108ed565b9392505050565b60018060a01b0381511682525f60208201516040602085015280518060408601528060208301606087015e5f606082870101526060601f19601f8301168601019250505092915050565b602081525f610a226020830184610a29565b5f805f60608486031215610a97575f80fd5b610aa0846108ed565b9250610aae602085016108ed565b929592945050506040919091013590565b5f60208284031215610acf575f80fd5b813567ffffffffffffffff811115610ae5575f80fd5b8201601f81018413610af5575f80fd5b803567ffffffffffffffff811115610b0f57610b0f610930565b8060051b610b1f60208201610944565b91825260208184018101929081019087841115610b3a575f80fd5b6020850194505b83851015610b6357610b52856108ed565b825260209485019490910190610b41565b979650505050505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015610bc557603f19878603018452610bb0858351610a29565b94506020938401939190910190600101610b94565b50929695505050505050565b600181811c90821680610be557607f821691505b602082108103610c0357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610c4d57805f5260205f20601f840160051c81016020851015610c2e5750805b601f840160051c820191505b818110156103bd575f8155600101610c3a565b505050565b815167ffffffffffffffff811115610c6c57610c6c610930565b610c8081610c7a8454610bd1565b84610c09565b6020601f821160018114610cb2575f8315610c9b5750848201515b5f19600385901b1c1916600184901b1784556103bd565b5f84815260208120601f198516915b82811015610ce15787850151825560209485019460019092019101610cc1565b5084821015610cfe57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52603260045260245ffdfea264697066735822122052e62ef2ca2c1fc458d61a136137ac152d7415858957fa1afc9f707fa36c62ca64736f6c634300081a0033",
        "sourceMap": "196:3189:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;844:42;;;;;;;;;;-1:-1:-1;844:42:20;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;689:32:21;;;671:51;;753:2;738:18;;731:34;;;;644:18;844:42:20;;;;;;;;1596:245;;;;;;;;;;-1:-1:-1;1596:245:20;;;;;:::i;:::-;;:::i;:::-;;2515:181;;;;;;;;;;-1:-1:-1;2515:181:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2262:152::-;;;:::i;1265:202::-;;;;;;;;;;-1:-1:-1;1265:202:20;;;;;:::i;:::-;-1:-1:-1;;;;;1354:14:20;;;;;;;:7;:14;;;;;;;;1374:27;;;;;;;;;;;;;;;;;;;1354:48;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1354:48:20;;;;;;;;;;;;1412:14;;;;;;;;1432:27;;;;;;;;;;;;;;;;;1412:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1265:202;3058:325;;;;;;;;;;-1:-1:-1;3058:325:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1975:214::-;;;;;;;;;;-1:-1:-1;1975:214:20;;;;;:::i;:::-;;:::i;2764:155::-;;;;;;;;;;;;;:::i;972:39::-;;;;;;;;;;-1:-1:-1;972:39:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5182:14:21;;5175:22;5157:41;;5145:2;5130:18;972:39:20;5017:187:21;844:42:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;844:42:20;;;;-1:-1:-1;844:42:20;-1:-1:-1;844:42:20;:::o;1596:245::-;1672:10;1707:1;1666:17;;;:5;:17;;;;;:29;-1:-1:-1;;;;;1666:29:20;:43;1658:52;;;;;;1740:27;;;;;;;;1745:10;1740:27;;;;;;;;;;-1:-1:-1;1777:17:20;;;:5;:17;;;;;;;;:25;;;;-1:-1:-1;;;;;;1777:25:20;-1:-1:-1;;;;;1777:25:20;;;;;;;;1740:27;;;;1777:17;;:25;;;;;;;:::i;:::-;-1:-1:-1;;1812:10:20;:22;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1812:22:20;-1:-1:-1;;;;;1812:22:20;;;;;;;;;;;;;;;-1:-1:-1;1812:22:20;;;;;;;;;:::i;:::-;;;;1648:193;1596:245;:::o;2515:181::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;2599:12:20;;;2635:1;2599:12;;;:5;:12;;;;;:24;;2591:69;;;;-1:-1:-1;;;2591:69:20;;7920:2:21;2591:69:20;;;7902:21:21;7959:2;7939:18;;;7932:30;-1:-1:-1;;;7978:18:21;;;7971:48;8036:18;;2591:69:20;;;;;;;;;-1:-1:-1;;;;;2677:12:20;;;;;;;:5;:12;;;;;;;;;2670:19;;;;;;;;;;;;;;;;;;;;;;2677:12;2670:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:181;;;:::o;2262:152::-;586:11;2326:9;:24;;2318:53;;;;-1:-1:-1;;;2318:53:20;;8267:2:21;2318:53:20;;;8249:21:21;8306:2;8286:18;;;8279:30;-1:-1:-1;;;8325:18:21;;;8318:46;8381:18;;2318:53:20;8065:340:21;2318:53:20;2389:10;2381:19;;;;:7;:19;;;;;:26;;-1:-1:-1;;2381:26:20;2403:4;2381:26;;;2262:152::o;3058:325::-;3181:22;;3139:13;;3164:14;3181:22;3233:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3233:18:20;;;;;;;;;;;;;;;;3213:38;;3266:9;3261:96;3285:6;3281:1;:10;3261:96;;;3321:5;:25;3327:15;3343:1;3327:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3321:25:20;-1:-1:-1;;;;;3321:25:20;;;;;;;;;;;;3312:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:34:20;-1:-1:-1;;;;;3312:34:20;-1:-1:-1;;;;;3312:34:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:3;3316:1;3312:6;;;;;;;;:::i;:::-;;;;;;;;;;:34;3293:3;;3261:96;;;-1:-1:-1;3373:3:20;3058:325;-1:-1:-1;;;3058:325:20:o;1975:214::-;2082:10;2049:17;;;;:5;:17;;;;;:29;-1:-1:-1;;;;;2049:29:20;:43;2041:93;;;;-1:-1:-1;;;2041:93:20;;8744:2:21;2041:93:20;;;8726:21:21;8783:2;8763:18;;;8756:30;8822:34;8802:18;;;8795:62;-1:-1:-1;;;8873:18:21;;;8866:35;8918:19;;2041:93:20;8542:401:21;2041:93:20;2150:10;2144:17;;;;:5;:17;;;;;;;;:26;:38;2173:9;2144:26;:38;:::i;:::-;;1975:214;:::o;2764:155::-;2849:10;2841:19;;;;:7;:19;;;;;;2808:13;;2841:19;;:27;;:19;:27;2833:52;;;;-1:-1:-1;;;2833:52:20;;9150:2:21;2833:52:20;;;9132:21:21;9189:2;9169:18;;;9162:30;-1:-1:-1;;;9208:18:21;;;9201:42;9260:18;;2833:52:20;8948:336:21;2833:52:20;2902:10;2895:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2895:17:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2764:155;:::o;14:173:21:-;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:300::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;458:2;443:18;;;;430:32;;-1:-1:-1;;;192:300:21:o;776:127::-;837:10;832:3;828:20;825:1;818:31;868:4;865:1;858:15;892:4;889:1;882:15;908:275;979:2;973:9;1044:2;1025:13;;-1:-1:-1;;1021:27:21;1009:40;;1079:18;1064:34;;1100:22;;;1061:62;1058:88;;;1126:18;;:::i;:::-;1162:2;1155:22;908:275;;-1:-1:-1;908:275:21:o;1188:766::-;1257:6;1310:2;1298:9;1289:7;1285:23;1281:32;1278:52;;;1326:1;1323;1316:12;1278:52;1366:9;1353:23;1399:18;1391:6;1388:30;1385:50;;;1431:1;1428;1421:12;1385:50;1454:22;;1507:4;1499:13;;1495:27;-1:-1:-1;1485:55:21;;1536:1;1533;1526:12;1485:55;1576:2;1563:16;1602:18;1594:6;1591:30;1588:56;;;1624:18;;:::i;:::-;1666:57;1713:2;1690:17;;-1:-1:-1;;1686:31:21;1719:2;1682:40;1666:57;:::i;:::-;1746:6;1739:5;1732:21;1794:7;1789:2;1780:6;1776:2;1772:15;1768:24;1765:37;1762:57;;;1815:1;1812;1805:12;1762:57;1870:6;1865:2;1861;1857:11;1852:2;1845:5;1841:14;1828:49;1922:1;1897:18;;;1917:2;1893:27;1886:38;;;;1901:5;1188:766;-1:-1:-1;;;;1188:766:21:o;1959:186::-;2018:6;2071:2;2059:9;2050:7;2046:23;2042:32;2039:52;;;2087:1;2084;2077:12;2039:52;2110:29;2129:9;2110:29;:::i;:::-;2100:39;1959:186;-1:-1:-1;;;1959:186:21:o;2150:462::-;2262:1;2258;2253:3;2249:11;2245:19;2237:5;2231:12;2227:38;2222:3;2215:51;2197:3;2312:4;2305:5;2301:16;2295:23;2350:4;2343;2338:3;2334:14;2327:28;2384:12;2378:19;2429:6;2422:4;2417:3;2413:14;2406:30;2490:6;2483:4;2469:12;2465:23;2460:2;2455:3;2451:12;2445:52;2540:1;2535:2;2526:6;2521:3;2517:16;2513:25;2506:36;2603:2;2596;2592:7;2587:2;2579:6;2575:15;2571:29;2566:3;2562:39;2558:48;2551:55;;;;2150:462;;;;:::o;2617:251::-;2792:2;2781:9;2774:21;2755:4;2812:50;2858:2;2847:9;2843:18;2835:6;2812:50;:::i;2873:374::-;2950:6;2958;2966;3019:2;3007:9;2998:7;2994:23;2990:32;2987:52;;;3035:1;3032;3025:12;2987:52;3058:29;3077:9;3058:29;:::i;:::-;3048:39;;3106:38;3140:2;3129:9;3125:18;3106:38;:::i;:::-;2873:374;;3096:48;;-1:-1:-1;;;3213:2:21;3198:18;;;;3185:32;;2873:374::o;3252:942::-;3336:6;3389:2;3377:9;3368:7;3364:23;3360:32;3357:52;;;3405:1;3402;3395:12;3357:52;3445:9;3432:23;3478:18;3470:6;3467:30;3464:50;;;3510:1;3507;3500:12;3464:50;3533:22;;3586:4;3578:13;;3574:27;-1:-1:-1;3564:55:21;;3615:1;3612;3605:12;3564:55;3655:2;3642:16;3681:18;3673:6;3670:30;3667:56;;;3703:18;;:::i;:::-;3749:6;3746:1;3742:14;3776:28;3800:2;3796;3792:11;3776:28;:::i;:::-;3838:19;;;3882:2;3912:11;;;3908:20;;;3873:12;;;;3940:19;;;3937:39;;;3972:1;3969;3962:12;3937:39;4004:2;4000;3996:11;3985:22;;4016:148;4032:6;4027:3;4024:15;4016:148;;;4098:23;4117:3;4098:23;:::i;:::-;4086:36;;4151:2;4049:12;;;;4142;;;;4016:148;;;4183:5;3252:942;-1:-1:-1;;;;;;;3252:942:21:o;4199:813::-;4387:4;4435:2;4424:9;4420:18;4465:2;4454:9;4447:21;4488:6;4523;4517:13;4554:6;4546;4539:22;4592:2;4581:9;4577:18;4570:25;;4654:2;4644:6;4641:1;4637:14;4626:9;4622:30;4618:39;4604:53;;4692:2;4684:6;4680:15;4713:1;4723:260;4737:6;4734:1;4731:13;4723:260;;;4830:2;4826:7;4814:9;4806:6;4802:22;4798:36;4793:3;4786:49;4858:45;4896:6;4887;4881:13;4858:45;:::i;:::-;4848:55;-1:-1:-1;4938:2:21;4961:12;;;;4926:15;;;;;4759:1;4752:9;4723:260;;;-1:-1:-1;5000:6:21;;4199:813;-1:-1:-1;;;;;;4199:813:21:o;5209:380::-;5288:1;5284:12;;;;5331;;;5352:61;;5406:4;5398:6;5394:17;5384:27;;5352:61;5459:2;5451:6;5448:14;5428:18;5425:38;5422:161;;5505:10;5500:3;5496:20;5493:1;5486:31;5540:4;5537:1;5530:15;5568:4;5565:1;5558:15;5422:161;;5209:380;;;:::o;5720:518::-;5822:2;5817:3;5814:11;5811:421;;;5858:5;5855:1;5848:16;5902:4;5899:1;5889:18;5972:2;5960:10;5956:19;5953:1;5949:27;5943:4;5939:38;6008:4;5996:10;5993:20;5990:47;;;-1:-1:-1;6031:4:21;5990:47;6086:2;6081:3;6077:12;6074:1;6070:20;6064:4;6060:31;6050:41;;6141:81;6159:2;6152:5;6149:13;6141:81;;;6218:1;6204:16;;6185:1;6174:13;6141:81;;5811:421;5720:518;;;:::o;6414:1299::-;6540:3;6534:10;6567:18;6559:6;6556:30;6553:56;;;6589:18;;:::i;:::-;6618:97;6708:6;6668:38;6700:4;6694:11;6668:38;:::i;:::-;6662:4;6618:97;:::i;:::-;6764:4;6795:2;6784:14;;6812:1;6807:649;;;;7500:1;7517:6;7514:89;;;-1:-1:-1;7569:19:21;;;7563:26;7514:89;-1:-1:-1;;6371:1:21;6367:11;;;6363:24;6359:29;6349:40;6395:1;6391:11;;;6346:57;7616:81;;6777:930;;6807:649;5667:1;5660:14;;;5704:4;5691:18;;-1:-1:-1;;6843:20:21;;;6961:222;6975:7;6972:1;6969:14;6961:222;;;7057:19;;;7051:26;7036:42;;7164:4;7149:20;;;;7117:1;7105:14;;;;6991:12;6961:222;;;6965:3;7211:6;7202:7;7199:19;7196:201;;;7272:19;;;7266:26;-1:-1:-1;;7355:1:21;7351:14;;;7367:3;7347:24;7343:37;7339:42;7324:58;7309:74;;7196:201;-1:-1:-1;;;;7443:1:21;7427:14;;;7423:22;7410:36;;-1:-1:-1;6414:1299:21:o;8410:127::-;8471:10;8466:3;8462:20;8459:1;8452:31;8502:4;8499:1;8492:15;8526:4;8523:1;8516:15",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "createUser(string)": "507ffba5",
        "editMatch(address,address,uint256)": "a0d5fe60",
        "getAllUsers()": "e2842d79",
        "getSelectedUsers(address[])": "a7ea2e7c",
        "getUser(address)": "6f77926b",
        "hasPaid(address)": "fbf47a9a",
        "matches(address,uint256)": "1a9802e9",
        "payPremiumForExport()": "7b788f08",
        "updateDataHash(string)": "b4033da8"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dataHash\",\"type\":\"string\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"compatibility\",\"type\":\"uint256\"}],\"name\":\"editMatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUsers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"userHash\",\"type\":\"string\"}],\"internalType\":\"struct BuilderDataSupplyMarket.User[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_usersAddresses\",\"type\":\"address[]\"}],\"name\":\"getSelectedUsers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"userHash\",\"type\":\"string\"}],\"internalType\":\"struct BuilderDataSupplyMarket.User[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"userHash\",\"type\":\"string\"}],\"internalType\":\"struct BuilderDataSupplyMarket.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasPaid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"matches\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"compatibilityConstant\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payPremiumForExport\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dataHash\",\"type\":\"string\"}],\"name\":\"updateDataHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"BuilderLattice.\",\"kind\":\"dev\",\"methods\":{\"createUser(string)\":{\"params\":{\"_dataHash\":\"Hash of the data for the user.\"}},\"editMatch(address,address,uint256)\":{\"params\":{\"compatibility\":\"Compatibility between them.\",\"user1\":\"Address of the first user.\",\"user2\":\"Address of the second user.\"}},\"getSelectedUsers(address[])\":{\"params\":{\"_usersAddresses\":\"Addresses of the users as an array.\"}},\"getUser(address)\":{\"params\":{\"_addr\":\"Address of the user.\"}},\"updateDataHash(string)\":{\"params\":{\"_dataHash\":\"Hash of the data for the user.\"}}},\"title\":\"BuilderDataSupplyMarket.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createUser(string)\":{\"notice\":\"Creates a new user in this contract.\"},\"editMatch(address,address,uint256)\":{\"notice\":\"Edits the compatibility between two users.\"},\"getAllUsers()\":{\"notice\":\"Returns an array of all users.\"},\"getSelectedUsers(address[])\":{\"notice\":\"Returns an array of selected users.\"},\"getUser(address)\":{\"notice\":\"Returns a user struct.\"},\"hasPaid(address)\":{\"notice\":\"Mapping indicating if the user has paid the premium for exporting data.\"},\"matches(address,uint256)\":{\"notice\":\"Mapping from a user to the array of users it is compatible with.\"},\"payPremiumForExport()\":{\"notice\":\"Pay the premium for exporting data.\"},\"updateDataHash(string)\":{\"notice\":\"Updates data hash for a user(msg.sender).\"}},\"notice\":\"Contract that stores hash and compatibility of builders.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BuilderDataSupplyMarket.sol\":\"BuilderDataSupplyMarket\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/BuilderDataSupplyMarket.sol\":{\"keccak256\":\"0xec43f29794eef71e7e5a04d7dd2687d687880a8cbd4296f940141ac3bb4c73c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfe47e56612821770eeb9cc724ef6f83963a7a25884b1b3231cbaaad89d5f9ef\",\"dweb:/ipfs/QmQHyJJLMpsLF3KqUkSZ7GJwpfAt7wzaABhb8fZxLWaaSH\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "_dataHash",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "createUser"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user1",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "user2",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "compatibility",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "editMatch"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAllUsers",
                    "outputs": [
                        {
                            "internalType": "struct BuilderDataSupplyMarket.User[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "userAddress",
                                    "type": "address"
                                },
                                {
                                    "internalType": "string",
                                    "name": "userHash",
                                    "type": "string"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address[]",
                            "name": "_usersAddresses",
                            "type": "address[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getSelectedUsers",
                    "outputs": [
                        {
                            "internalType": "struct BuilderDataSupplyMarket.User[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "userAddress",
                                    "type": "address"
                                },
                                {
                                    "internalType": "string",
                                    "name": "userHash",
                                    "type": "string"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_addr",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getUser",
                    "outputs": [
                        {
                            "internalType": "struct BuilderDataSupplyMarket.User",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "userAddress",
                                    "type": "address"
                                },
                                {
                                    "internalType": "string",
                                    "name": "userHash",
                                    "type": "string"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "hasPaid",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "matches",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "userAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "compatibilityConstant",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "payPremiumForExport"
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "_dataHash",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateDataHash"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "createUser(string)": {
                        "params": {
                            "_dataHash": "Hash of the data for the user."
                        }
                    },
                    "editMatch(address,address,uint256)": {
                        "params": {
                            "compatibility": "Compatibility between them.",
                            "user1": "Address of the first user.",
                            "user2": "Address of the second user."
                        }
                    },
                    "getSelectedUsers(address[])": {
                        "params": {
                            "_usersAddresses": "Addresses of the users as an array."
                        }
                    },
                    "getUser(address)": {
                        "params": {
                            "_addr": "Address of the user."
                        }
                    },
                    "updateDataHash(string)": {
                        "params": {
                            "_dataHash": "Hash of the data for the user."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "createUser(string)": {
                        "notice": "Creates a new user in this contract."
                    },
                    "editMatch(address,address,uint256)": {
                        "notice": "Edits the compatibility between two users."
                    },
                    "getAllUsers()": {
                        "notice": "Returns an array of all users."
                    },
                    "getSelectedUsers(address[])": {
                        "notice": "Returns an array of selected users."
                    },
                    "getUser(address)": {
                        "notice": "Returns a user struct."
                    },
                    "hasPaid(address)": {
                        "notice": "Mapping indicating if the user has paid the premium for exporting data."
                    },
                    "matches(address,uint256)": {
                        "notice": "Mapping from a user to the array of users it is compatible with."
                    },
                    "payPremiumForExport()": {
                        "notice": "Pay the premium for exporting data."
                    },
                    "updateDataHash(string)": {
                        "notice": "Updates data hash for a user(msg.sender)."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "forge-std/=lib/forge-std/src/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/BuilderDataSupplyMarket.sol": "BuilderDataSupplyMarket"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "src/BuilderDataSupplyMarket.sol": {
                "keccak256": "0xec43f29794eef71e7e5a04d7dd2687d687880a8cbd4296f940141ac3bb4c73c5",
                "urls": [
                    "bzz-raw://dfe47e56612821770eeb9cc724ef6f83963a7a25884b1b3231cbaaad89d5f9ef",
                    "dweb:/ipfs/QmQHyJJLMpsLF3KqUkSZ7GJwpfAt7wzaABhb8fZxLWaaSH"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 20
}